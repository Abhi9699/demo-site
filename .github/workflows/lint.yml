name: Lint Awesome List
on: [push, pull_request]
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1.0.0
      - uses: max/awesome-lint@v2.0.0

  scan-with-dastardly:
    name: Scan with Dastardly
    runs-on: ubuntu-latest
    #needs: deploy-to-azure

    steps:
      - name: Run Dastardly Scan
        uses: PortSwigger/dastardly-github-action@main
        with:
          target-url: 'https://vulnerable-site.azurewebsites.net/'

      - name: Publish Dastardly Scan Report
        if: always()
        uses: mikepenz/action-junit-report@v4
        with:
          check_name: 'Dastardly Scan Report'
          report_paths: '**/dastardly-report.xml'
          require_tests: true

  dast-scan:
      #contents: read # for actions/checkout to fetch code
      #security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      #actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status 
      #missing only package:read?
    name: DAST Scan
    runs-on: ubuntu-latest
    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: docker rm demoApp | true && docker run -d -p 8080:8080 --name demoApp ${{ env.IMAGE_TAG }}         

      - name: wait for container to start
        run: timeout 300 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:8080)" != "200" ]]; do sleep 5; done' || false

      - name: test container
        run: curl -s localhost:8080/echo?msg=Hello%20World!
     
      - name: Run ZAP OWASP full scan
        uses: zaproxy/action-full-scan@v0.4.0
        with:
          docker_name: 'owasp/zap2docker-stable'
          token: ${{ secrets.GITHUB_TOKEN }}
          target: 'http://www.itsecgames.com/'
          cmd_options: '-a -j -l WARN -z "-addoninstallall" '
          allow_issue_writing: true

      - name: Upload html report
        uses: actions/upload-artifact@v3
        with:
          name: DAST_Report.html
          path: report_html.html

      - name: stop docker
        if: always()
        run: |
          docker stop demoApp && docker rm demoApp && docker container prune --force && docker image prune --force
